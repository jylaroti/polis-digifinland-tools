apiVersion: v1
kind: ConfigMap
metadata:
  name: polis-server
data:
  ADMIN_UIDS: "[]"
  EMAIL_TRANSPORT_TYPES: "mailgun"
  # (Deprecated) Used internally by Node.Crypto.
  ENCRYPTION_PASSWORD_00001:
  # Optionally set this manually or use `git rev-parse HEAD`. It can be useful for debugging.
  GIT_HASH:
  # Options: prod, preprod, dev:
  MATH_ENV: "dev"
  # Options: local, s3, scp
  REPORT_UPLOADER: "local"
  SCP_SUBDIR_PREPROD:
  SCP_SUBDIR_PROD:
  SERVER_LOG_LEVEL: "info"
  # (Deprecated) Settings for submitting web requests to the math worker.
  WEBSERVER_PASS: "ws-pass"
  WEBSERVER_USERNAME: "ws-user"

  READ_ONLY_DATABASE_URL:
  # DATABASE_URL is passed as Secret
  # DATABASE_URL:

  ###### PORTS ######
  API_SERVER_PORT: "5000"
  HTTP_PORT: "80"
  HTTPS_PORT: "443"
  STATIC_FILES_PORT: "80"
  # These ports could actually be different in development or if you are hosting clint-admin,
  # client-participation, and file-server on different servers or containers.
  STATIC_FILES_ADMIN_PORT: "80"
  STATIC_FILES_PARTICIPATION_PORT: "80"

  ###### EMAIL ADDRESSES ######
  ADMIN_EMAIL_DATA_EXPORT_TEST:
  ADMIN_EMAIL_DATA_EXPORT:
  ADMIN_EMAIL_EMAIL_TEST:
  ADMIN_EMAILS: "[]"
  POLIS_FROM_ADDRESS: "Polis <polis@example.digifinland.dev>"

  ###### BOOLEAN FLAGS ######
  # (false by default):
  BACKFILL_COMMENT_LANG_DETECTION:
  CACHE_MATH_RESULTS:
  # Set to `false` for production:
  DEV_MODE: "false"
  RUN_PERIODIC_EXPORT_TESTS:
  SHOULD_USE_TRANSLATION_API: "true"
  
  ###### CUSTOM URL/HOSTNAME SETTINGS ######
  # If you are running a development server anywhere other than localhost:80 or localhost:5000,
  # you need to update API_DEV_HOSTNAME and EMBED_SERVICE_HOSTNAME.
  API_DEV_HOSTNAME: "example.digifinland.dev"
  # If you are running polis on a custom domain, set both API_SERVER_HOSTNAME and DOMAIN_OVERRIDE
  # to the same value. In the future these will be combined into one setting.
  API_SERVER_HOSTNAME: "example.digifinland.dev"
  DOMAIN_OVERRIDE: "example.digifinland.dev"
  DOMAIN_WHITELIST_ITEM_01: "example.digifinland.dev"
  DOMAIN_WHITELIST_ITEM_02:
  DOMAIN_WHITELIST_ITEM_03:
  DOMAIN_WHITELIST_ITEM_04:
  DOMAIN_WHITELIST_ITEM_05:
  DOMAIN_WHITELIST_ITEM_06:
  DOMAIN_WHITELIST_ITEM_07:
  DOMAIN_WHITELIST_ITEM_08:
  # In production, should match API_SERVER_HOSTNAME or DOMAIN_OVERRIDE, if set:
  EMBED_SERVICE_HOSTNAME: "example.digifinland.dev"
  # Full hostname with protocol of your API server (used only for dev):
  REPORT_SERVICE_URL: "http://polis-server:5000"
  # STATIC_FILES_HOST: "file-server"
  STATIC_FILES_HOST: "polis-file-server"

  ###### THIRD PARTY API CREDENTIALS ######
  # These are all optional, but some features will not work without them.
  AKISMET_ANTISPAM_API_KEY:
  # Used for S3 data import/export:
  AWS_REGION:
  # Must register with facebook and get a facebook app id to use the facebook auth features:
  FB_APP_ID:
  # GOOGLE_CREDENTIALS_BASE64 are given as Secret
  # GOOGLE_CREDENTIALS_BASE64: 
  GOOGLE_CREDS_STRINGIFIED:
  MAILGUN_DOMAIN: "example.digifinland.dev"
  MAILGUN_ENDPOINT: "api.eu.mailgun.net"
  MAXMIND_LICENSEKEY:
  MAXMIND_USERID:
  S3_BUCKET_PREPROD:
  S3_BUCKET_PROD:
  TWITTER_CONSUMER_KEY:
  TWITTER_CONSUMER_SECRET:
  # Read from process.env by aws-sdk, if using SES for email transport
  # https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/loading-node-credentials-environment.html
  AWS_ACCESS_KEY_ID:
  AWS_SECRET_ACCESS_KEY:
  # This value is written by the server app if SHOULD_USE_TRANSLATION_API is true.
  GOOGLE_APPLICATION_CREDENTIALS: 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polis-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: polis-server
  template:
    metadata:
      labels:
        app: polis-server
    spec:
      containers:
        - image: europe-north1-docker.pkg.dev/project/repository/polis-server:test
          imagePullPolicy: Always
          name: polis-server
          envFrom:
          - secretRef:
              name: polis-server-secret
          - configMapRef:
              name: polis-server
          ports:
            - containerPort: 5000
          readinessProbe:
            httpGet:
              # /home gets proxied to polis-file-server - use api paths for checking polis-server health
              # path: /home
              path: /api/v3/testConnection 
              port: 5000            
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
---
apiVersion: v1
kind: Service
metadata:
  name: polis-server-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "polis-server-cloudarmor"}'
spec:
  type: NodePort
  ports:
    - name: http
      port: 5000
      targetPort: 5000
  selector:
    app: polis-server
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: polis-test-managed-cert
spec:
  domains:
    - example.digifinland.dev
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: lb-http-to-https
spec:
  redirectToHttps:
    enabled: true
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: polis-server-cloudarmor
spec:
  securityPolicy:
    name: polis-example-test-ca-policies
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: polis-server-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: polis-example-test-lb-global-static-ip
    networking.gke.io/managed-certificates: polis-test-managed-cert
    kubernetes.io/ingress.class: "gce"
    networking.gke.io/v1beta1.FrontendConfig: lb-http-to-https
spec:
  defaultBackend:
    service:
      name: polis-server-service
      port:
        number: 5000
  rules:
  - host: example.digifinland.dev
    http:
      paths:
      - pathType: ImplementationSpecific
        path: /*
        backend:
          service:
            name: polis-server-service
            port:
              number: 5000


