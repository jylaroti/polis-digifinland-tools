# before running docker-compose up for the first time,
# either do a pull:
# docker-compose pull
# or do a build:
# GIT_HASH $(git rev-parse --short HEAD) docker-compose up --detach

# subsequently you should only need to run:
# docker-compose up --detach

# force a full re-build with no cache from previous builds:
# docker-compose build --build-arg GIT_HASH $(git rev-parse --short HEAD) --parallel --no-cache

# to stop:
# docker-compose down

version: "3.4"

services:
  server:
    env_file: ./server/docker-${DOCKER_ENV}-digifinland.env
    image: docker.io/compdem/polis-server${DOCKER_ENV}
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
# DF customization: remove dep (when used external DB from host)
#      - "postgres"
      - "file-server"
    networks:
      - "polis-net"
    extra_hosts:
      - "host.docker.internal:host-gateway"
# DF customization: 
#   expose ports 5000-5008 (to allow usage of external nginx as load balancer)
#   add deployment section to add replicas --> docker compose up for server needs to be run X amount of times for some reason to have all containers up and running (where X=number of replicas). 
#   note that multiple replicas were only needed with VM based initial GCE test instance
    restart: on-failure
    ports:
#     - 5000:5000
      - target: 5000
        published: 5000-5005
        protocol: tcp
        mode: ingress
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: vip
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first      
      restart_policy:
        condition: always
        delay: 5s
        # max_attempts: 3
        window: 120s  

  math:
    container_name: polis-math
    env_file: ./math/docker-${DOCKER_ENV}-digifinland.env
    image: docker.io/compdem/polis-math:${DOCKER_ENV}
# DF customization: remove dep
#    depends_on:
#      - "postgres"
    build:
      context: ./math
    networks:
      - "polis-net"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      restart_policy:
        condition: always
        delay: 5s
        # max_attempts: 3
        window: 120s        

# DF customization: remove pg container
#  postgres:
#    container_name: polis-postgres
#    env_file: ./server/docker-db-dev.env
#    image: docker.io/compdem/polis-postgres:${TAG}
#    restart: always
#    build:
#      context: ./server
#      dockerfile: Dockerfile-db
#    networks:
#      - "polis-net"
#    volumes:
#      - "backups:/backups"
#      - "postgres:/var/lib/postgresql/data"

# DF customization: remove nginx proxy container
#  nginx-proxy:
#    container_name: polis-nginx-proxy
#    image: docker.io/compdem/polis-nginx-proxy:${TAG}
#    build:
#      context: ./file-server
#      dockerfile: nginx.Dockerfile
#    environment:
#      - TAG
#    depends_on:
#      - "server"
#    networks:
#      - "polis-net"
#    ports:
#      - ${HTTP_PORT:-80}:${HTTP_PORT:-80}
#      - ${HTTPS_PORT:-443}:${HTTPS_PORT:-443}

  file-server:
    container_name: polis-file-server
    image: docker.io/compdem/polis-file-server:${DOCKER_ENV}
    build:
      context: ./
      dockerfile: file-server/Dockerfile
      args:
        GIT_HASH: "${GIT_HASH}"
    networks:
      - "polis-net"
    deploy:
      restart_policy:
        condition: always
        delay: 5s
        # max_attempts: 3
        window: 120s              

networks:
  polis-net:

volumes:
  backups:
  postgres:
